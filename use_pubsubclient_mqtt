//Documentation: https://pubsubclient.knolleary.net/api.html

//tutorial: https://techtutorialsx.com/2017/04/09/esp8266-connecting-to-mqtt-broker/

//Example to test wifi: https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266WiFi/examples/HTTPSRequest/HTTPSRequest.ino


//With our Server dain: in pubsubclient.h take the older version!!!!!!
in pubsubclient.h change the version to 3.1 instead of 3.1.1 
and increase the packet size to 256



// Then this is a working example:

#include <ESP8266WiFi.h>
#include <PubSubClient.h>

const char* ssid = "KKK";
const char* password =  "kslaf√∂d";
IPAddress mqttServer(192, 168, 2, 22);
const int mqttPort = 3453;
//const char* mqttUser = "YourMqttUser";
//const char* mqttPassword = "YourMqttUserPassword";
char server[] = "www.google.com";

WiFiClient espClient;
PubSubClient client(espClient);


void callback(char* topic, byte* payload, unsigned int length) {

  Serial.print("Message arrived in topic: ");
  Serial.println(topic);

  Serial.print("Message:");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }

  Serial.println();
  Serial.println("-----------------------");

}


void setup() {

  Serial.begin(115200);


  //setup wifi
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println("Connecting to WiFi..");
  }
  Serial.println("Connected to the WiFi network");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());


  // if you get a connection, report back via serial:
  if (espClient.connect(server, 80)) {
    Serial.println("connected");
    // Make a HTTP request:
    //espClient.println("GET /search?q=arduino HTTP/1.1");
    //espClient.println("Host: www.google.com");
    //espClient.println("Connection: close");
    //espClient.println();
  } else {
    // if you didn't get a connection to the server:
    Serial.println("connection failed");
  }

  //mosquitto_sub -h test.mosquitto.org -t "#" -v
  //setup mqtt
  //Serial.println(mqttServer);
  Serial.println("Connecting to MQTT...");
  Serial.println(client.connected());
  Serial.println(client.state());

  client.setServer("192.168.2.22", 3453);
  //client.setServer("test.mosquitto.org", 1883);
  
  Serial.println("before callback");
  client.setCallback(callback);
  delay(1000);
  Serial.println("after callback");
  Serial.println(client.connected());
 
  Serial.println("connected_2?");
  client.subscribe("temp");
  // client.subscribe("#");
  if (client.publish("temp","5.5",true)) {
    Serial.println("worked");
  } else {
     Serial.println("failed");
  }
  Serial.println(client.state());

  Serial.println("connected_3?");
}

void reconnect() {
 while (!client.connected() and client.state() != 0) {
    Serial.println("connected_0");

    if (client.connect("ESP8266Client")) {

      Serial.println("connected_1");

    } else {

      Serial.print("failed with state ");
      Serial.println(client.state());
      delay(2000);

    }
  }
}
void loop() {
   if ( client.state() != 0) {
    reconnect();
  }
  client.loop();
  if (client.publish("temp","5.5",true)) {
    Serial.println("worked");
  } else {
    Serial.println("failed");
  }
  delay(2000);

  Serial.println(client.state());

}
